Git 再入門:  引数がない場合の git push のデフォルトの挙動
=========================================================

.. container:: editdate

  更新 2014年8月14日

:ref:`前述 <git-push>` したように ``git push <remote> <src>:<dst>`` を実行するとローカルブランチ ``<src>`` を
リモートレポジトリ ``<remote>`` に対して書き込み、``<remote>`` 上のブランチ ``<dst>`` が
pushされた ``<src>`` を指すように first-forward します。
``git pull`` の場合と同様にこの引数も省略することができます。

::

  git push

``git push`` で引数を省略した場合のルールは ``git pull`` で引数を省略した場合のそれより複雑です。

<remote> が省略された時の挙動
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
``<remote>`` が省略された場合は `git push の --repo=<repository> の項目 <http://git-scm.com/docs/git-push/1.9.2>`_ に書かれています。

- 現在のブランチ (``<src>`` ではない点に注意！) がトラッキングブランチである場合 (upstream が設定されている場合)
  トラックしているブランチ (== upstream) のリモートレポジトリが ``<remote>`` として利用される。
- そうでない場合は、

  - ``--repository=<repository>`` が設定されている場合は、指定された値が利用されます

  - ``--repository=<repository>`` がない場合は ``origin`` が利用されます。

<src>:<dst> が省略された時の挙動
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
``<src>:<dst>`` が省略された場合の挙動は、`push.default の設定値によって以下のように決まります <http://git-scm.com/docs/git-config/1.9.2>`_。
1.x系列では ``matching`` がデフォルト値ですが、``mathing`` だと現在のブランチ以外も push してしまうという割りと
危険な動作をするので2.x系からのデフォルト値の ``simple`` などに変更しておくことが推奨されます。

::

  git config --global push.default simple

5つの値について簡単に説明しておきます。

- nothing

  - 省略された場合何もしません。一番安全ですし、これに設定するのも悪く無いかと思います。

- current

  - 現在のブランチ ``<current>`` を同名のブランチとして push します。
    ``<current>:<current>`` を指定したことになります。

- upstream

  - 現在のブランチをその upstream に対して push します。
    現在のブランチに upstream がない場合は何もしません。
    また ``<remote>`` が upstream に指定されたリモートトラキングブランチのレポジトリと異なる場合も何もしません。
    個人的にはこれが自然かな？という気がします。

- simple

  - 現在のブランチに upstream が設定されており、upstream のレポジトリが ``<remote>`` と一致する場合

    - 現在のブランチと upstram のブランチが同名の場合 push を行います。
    - 名前が異なる場合は何もしません。

  - そうでない場合は ``current`` と同じように動作します。
  - デフォルトの割には動作が少し複雑...

- matching

  - 同じ名前のブランチがリモートレポジトリに存在する全てのブランチを push します。
    現在のブランチとは関係なく、同名のブランチがあればすべて push される。
    意図していないブランチをうっかり push しかねない、恐ろしいオプション。
    しかし 1.x 系列ではこれがデフォルト値である...
    ``git config --global push.default simple`` で設定を変更しておきましょう。

:<dst> が省略された時の挙動
~~~~~~~~~~~~~~~~~~~~~~~~~~~
``git push`` に渡す ``<src>:<dst>`` の ``:<dst>`` の部分は省略可能です。
``:<dst>`` を省略した場合には ``<src>:<src>`` を指定したのと同じことになります。


``git push`` で引数を省略した場合のルールは ``git pull`` で引数を省略した場合のそれより複雑です。

<remote> が省略された時の挙動
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
``<remote>`` が省略された場合は `git push の --repo=<repository> の項目 <http://git-scm.com/docs/git-push/1.9.2>`_ に書かれています。

- 現在のブランチ (``<src>`` ではない点に注意！) がトラッキングブランチである場合 (upstream が設定されている場合)
  トラックしているブランチ (== upstream) のリモートレポジトリが ``<remote>`` として利用される。
- そうでない場合は、

  - ``--repository=<repository>`` が設定されている場合は、指定された値が利用されます

  - ``--repository=<repository>`` がない場合は ``origin`` が利用されます。

<src>:<dst> が省略された時の挙動
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
``<src>:<dst>`` が省略された場合の挙動は、`push.default の設定値によって以下のように決まります <http://git-scm.com/docs/git-config/1.9.2>`_。
1.x系列では ``matching`` がデフォルト値ですが、``mathing`` だと現在のブランチ以外も push してしまうという割りと
危険な動作をするので2.x系からのデフォルト値の ``simple`` などに変更しておくことが推奨されます。

::

  git config --global push.default simple

5つの値について簡単に説明しておきます。

- nothing

  - 省略された場合何もしません。一番安全ですし、これに設定するのも悪く無いかと思います。

- current

  - 現在のブランチ ``<current>`` を同名のブランチとして push します。
    ``<current>:<current>`` を指定したことになります。

- upstream

  - 現在のブランチをその upstream に対して push します。
    現在のブランチに upstream がない場合は何もしません。
    また ``<remote>`` が upstream に指定されたリモートトラキングブランチのレポジトリと異なる場合も何もしません。
    個人的にはこれが自然かな？という気がします。

- simple

  - 現在のブランチに upstream が設定されており、upstream のレポジトリが ``<remote>`` と一致する場合

    - 現在のブランチと upstram のブランチが同名の場合 push を行います。
    - 名前が異なる場合は何もしません。

  - そうでない場合は ``current`` と同じように動作します。
  - デフォルトの割には動作が少し複雑...

- matching

  - 同じ名前のブランチがリモートレポジトリに存在する全てのブランチを push します。
    現在のブランチとは関係なく、同名のブランチがあればすべて push される。
    意図していないブランチをうっかり push しかねない、恐ろしいオプション。
    しかし 1.x 系列ではこれがデフォルト値である...
    ``git config --global push.default simple`` で設定を変更しておきましょう。

:<dst> が省略された時の挙動
~~~~~~~~~~~~~~~~~~~~~~~~~~~
``git push`` に渡す ``<src>:<dst>`` の ``:<dst>`` の部分は省略可能です。
``:<dst>`` を省略した場合には ``<src>:<src>`` を指定したのと同じことになります。

.. TODO(yunabe): About git config remote.<repository>.push
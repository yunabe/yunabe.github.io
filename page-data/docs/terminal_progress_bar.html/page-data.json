{"componentChunkName":"component---src-templates-post-js","path":"/docs/terminal_progress_bar.html","webpackCompilationHash":"16062e5a5b6c169813ec","result":{"data":{"markdownRemark":{"html":"<p>ターミナルに用意されている特殊な制御コード (エスケープシーケンス)を使用して、 Python, Ruby, C++, Javaなど言語に関係なく簡単にターミナルにプログレスバーを表示することができます。</p>\n<img src=\"/assets/progressbar.gif\" width=\"344\" height=\"60\">\n<h2 id=\"仕組み\"><a href=\"#%E4%BB%95%E7%B5%84%E3%81%BF\" aria-label=\"仕組み permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>仕組み</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[=&gt;           ]  5.2%</code></pre></div>\n<p>プログレスバーが更新されるたびに新しい行が表示されるのを防ぐために、\nプログレスバーを表示する前にカーソルを行頭に戻して行の内容を消してしまえればプログレスバーの完成です。\nカーソルの制御と行の削除には</p>\n<ul>\n<li><a href=\"http://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%AA%E3%83%83%E3%82%B8%E3%83%BB%E3%83%AA%E3%82%BF%E3%83%BC%E3%83%B3\">キャリッジ・リターン (carriage\nreturn)</a></li>\n<li><a href=\"http://www.termsys.demon.co.uk/vtansi.htm\">ターミナルのエスケープシーケンス</a>\nを利用します。</li>\n</ul>\n<p>の２つを利用します。 キャリッジ・リターンは Windows の改行文字 <code>\\r\\n</code>\nで出てくる <code>\\r</code> です。 普段 <code>\\n</code>\nに余計についてくる邪魔な文字程度の認識しかないと思いますが、単体で利用するとカーソルの位置を行頭に移動します。\n移動した後文字を出力するとすでに表示されている文字を上書きして新しい文字を表示します。\n例えば <code>\"abcdefg\\r123\"</code> のような文字列を出力すると <code>\\r</code>\nでカーソルを行頭に戻した後 <code>abc</code> を <code>123</code> で上書きするので <code>123defg</code>\nが表示されます。\nそのためプログレスバーの長さが短くならないなら実はキャリッジ・リターンだけで十分で、エスケープシーケンスは使わなくても問題ありません。</p>\n<p>次にエスケープシーケンス。GUIの時代になって馴染みがないと思いますが、`&#x3C;ESC>`\nに続けて決められた特殊な文字列を出力することで文字の色の変更、\n表示されている文字の削除などの制御することができます。 &#x3C;ESC> は\n<a href=\"http://ja.wikipedia.org/wiki/ASCII\">ASCII文字コード</a> の十進数で <code>27</code>\nのコードです (16進数で <code>1b</code>, 8進数で <code>33</code>)。 この文字に続けて <code>[K</code> や\n<code>[94m</code> などの文字列を与えることでターミナルを制御することができます\n(<a href=\"http://www.termsys.demon.co.uk/vtansi.htm\">エスケープシーケンスの一覧</a>)。\n行の削除のエスケープシーケンスは &#x3C;ESC>[94m です。</p>\n<h2 id=\"実装\"><a href=\"#%E5%AE%9F%E8%A3%85\" aria-label=\"実装 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>実装</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[======&gt;      ] 42.3%</code></pre></div>\n<p>基本的には <code>\\r</code> と &#x3C;ESC>[94m を標準出力に書き出して、その後に\n<code>\"[====> ] 70%\"</code> のようなプログレスバーを表す文字列を書くだけです。\nただし以下の点に気をつけて下さい</p>\n<ul>\n<li>\n<p>プログレスバーの文字列の後で改行しない。</p>\n<ul>\n<li>例えば、Python では <code>print</code> ではなくて <code>sys.stdout.write</code>\nを使わなくてはならないし、 Javaでは <code>println</code> ではなくて <code>print</code>\nを使わなくてはなりません。</li>\n</ul>\n</li>\n<li>ファイルオブジェクトへの書き込みはバッファリングされてしまい、即座にターミナルに書き込まれない場合があるので\nプログレスバーを出力したらバッファをフラッシュする。</li>\n</ul>\n<p>これでそれっぽくプログレスバーが表示できるようになります\n(というか多くの解説がそこまでしか触れてない) が、\n人に公開するようなプログラムなら以下の点も留意すべきです。</p>\n<ul>\n<li>標準出力ではなくて標準エラーに出力する。</li>\n<li>リダイレクトなどによって、出力先がファイルなどターミナル以外になっている場合はプログレスバーを表示しない。\nそうしないとリダイレクト先のファイルがプログレスバーと制御文字で埋め尽くされて読むときに困ります。</li>\n</ul>\n<h3 id=\"python\"><a href=\"#python\" aria-label=\"python permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python</h3>\n<p><a href=\"https://github.com/yunabe/codelab/blob/master/misc/terminal_progressbar/progress.py\">GitHub にPythonのサンプルがおいてあります</a></p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\">sys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span><span class=\"token string\">'\\r\\033[K'</span> <span class=\"token operator\">+</span> get_progressbar_str<span class=\"token punctuation\">(</span>progress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsys<span class=\"token punctuation\">.</span>stderr<span class=\"token punctuation\">.</span>flush<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"おまけ\"><a href=\"#%E3%81%8A%E3%81%BE%E3%81%91\" aria-label=\"おまけ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>おまけ</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[===========&gt; ] 89.7%</code></pre></div>\n<h3 id=\"色をつける\"><a href=\"#%E8%89%B2%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B\" aria-label=\"色をつける permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>色をつける</h3>\n<p>プログレスバーがカラフルだと楽しいので余裕があったら色を付けてみましょう。\n<a href=\"http://www.termsys.demon.co.uk/vtansi.htm#colors\">エスケープシーケンスを使って文字の色と背景色が制御できる</a>\nのでこれを使います。 色の制御に使うエスケープシーケンスのフォーマットは\n&#x3C;ESC>[n1;n2;n3;...]m です。 n1, n2, ... の部分には <a href=\"http://en.wikipedia.org/wiki/ANSI_escape_code#CSI_codes\">Wikipedia の SGR\n(Select Graphic Rendition) parameters\n表</a>\nにある数字が入ります。例えば、文字を明るい赤にするには &#x3C;ESC> <code>[1;31m</code>\nを出力します。設定をリセットするのは <code>0</code> なので &#x3C;ESC> <code>[0m]</code>\nを出力することで元に戻ります。例えば次の命令を Python\nで実行すると真ん中の <code>*</code> のみが明るい赤で表示されるはずです。\nいろいろ自分で試して遊んでみて下さい。</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">print</span> <span class=\"token string\">\"*\\x1b[1;31m*\\x1b[0m*\"</span></code></pre></div>\n<p>エスケープシーケンスで指定できる Red, Blue\nなどの色が実際のターミナルでどのような色になるかは、 <a href=\"http://en.wikipedia.org/wiki/ANSI_escape_code#Colors\">Wikipedia\nにあるエスケープシーケンスで指定する色とターミナル上での色の対応表</a>\nが分かりやすいので参考にして下さい（ターミナル毎に微妙に色合いが異なります）。</p>","tableOfContents":"<ul>\n<li><a href=\"/docs/terminal_progress_bar.html/#%E4%BB%95%E7%B5%84%E3%81%BF\">仕組み</a></li>\n<li>\n<p><a href=\"/docs/terminal_progress_bar.html/#%E5%AE%9F%E8%A3%85\">実装</a></p>\n<ul>\n<li><a href=\"/docs/terminal_progress_bar.html/#python\">Python</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/terminal_progress_bar.html/#%E3%81%8A%E3%81%BE%E3%81%91\">おまけ</a></p>\n<ul>\n<li><a href=\"/docs/terminal_progress_bar.html/#%E8%89%B2%E3%82%92%E3%81%A4%E3%81%91%E3%82%8B\">色をつける</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"ターミナルにプログレスバーを表示する方法","lastmod":"2015-05-03T00:00:00.000Z","enable_toc":null},"fields":{"slug":"/docs/terminal_progress_bar.html"}},"site":{"siteMetadata":{"title":"yunabe.jp"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/terminal_progress_bar.html"}}}
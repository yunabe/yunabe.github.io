{"componentChunkName":"component---src-templates-post-js","path":"/docs/cookie_and_security.html","result":{"data":{"markdownRemark":{"html":"<p>このドキュメントの目的は Cookie とは何かを一から説明することではないので、そもそも Cookie とは何で何に使えるのかといった話は<a href=\"http://ja.wikipedia.org/wiki/HTTP_cookie\">Wikipedia の Cookie の記事</a>などを参考にして下さい。 ここでは Cookie がどういうものかは大体理解しているという前提で、仕様の確認をしていきます。</p>\n<h2 id=\"set-cookie-ヘッダを使って-cookie-を保存する\" style=\"position:relative;\"><a href=\"#set-cookie-%E3%83%98%E3%83%83%E3%83%80%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-cookie-%E3%82%92%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8B\" aria-label=\"set cookie ヘッダを使って cookie を保存する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set-Cookie ヘッダを使って Cookie を保存する</h2>\n<p>Cookie を設定する一番基本的な方法は HTTP ヘッダ の Set-Cookie を使う方法です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: name=value</code></pre></div>\n<p>のような HTTP header をサーバから返すと name と value のペアがブラウザに保存されて、後からそれを参照することができます。\n<code>Set-Cookie</code> に属性をつけて保存期間や Cookie が送信される条件などを制御することも可能です。\n属性をつけるには、 <code>\" ;max-age=3600\"</code> や <code>\" ;Secure\"</code> のように <code>\"; \"</code> + 属性名 + <code>\"=\"</code> + 属性の値を後ろに追加します。\n(厳密には <code>;</code> の後ろには半角スペースが必要で末尾には <code>;</code> は付けません。多くのブラウザは半角スペースを削除したり末尾に不要な <code>;</code> をつけても問題なく動くでしょうが)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: name=value; max-age=3600; Secure</code></pre></div>\n<p>これは、name=value というクッキーを 3600 秒間保存しておきなさい、ただしそのクッキーが利用できるのは https のページでのみです、 と指定してることになります。</p>\n<p>複数の name-value のペアを設定したい場合は Set-Cookie ヘッダを複数送ります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: name0=value0\nSet-Cookie: name1=value1</code></pre></div>\n<h2 id=\"cookie-を参照する\" style=\"position:relative;\"><a href=\"#cookie-%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B\" aria-label=\"cookie を参照する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cookie を参照する</h2>\n<p><code>Set-Cookie</code> で保存された Cookie は、HTTP Request の Cookie ヘッダとしてブラウザからサーバーに送信されます。 Cookie ヘッダは</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Cookie: name=0=value0; name1=value1</code></pre></div>\n<p>のように、ブラウザに保存されているクッキーの name=value のペアを <code>\"; \"</code> で連結したものものになります。\nどのクッキーがサーバーに対して送信されるかは、Set-Cookie で指定した max-age や Secure などの属性によって制御することができます。\nSecure が指定されていれば、サーバーが https の時にしか送信されないし、 max-age を超えた古くなったクッキーも送信されません(ブラウザから削除されます)。</p>\n<p>Cookie ヘッダでブラウザから送信されるクッキーの順序は以下のように決まります。</p>\n<ul>\n<li>後述する path 属性のなるべく長いものが前に来る</li>\n<li>path 属性の長さが同じ場合は、最近作られたものが前に来る</li>\n</ul>\n<p>また後述するように、クッキーは name が同一でも <code>domain</code>, <code>path</code> 属性の値が異なれば別のものとして扱われるので、<strong>同じ name のクッキーが複数 Cookie ヘッダの中に現れることがありうる</strong>ので注意してください。例えば、www.example.com にあるサーバーが</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: myname=value0; example.com; path=/\nSet-Cookie: myname=value1; www.example.com; path=/</code></pre></div>\n<p>という Set-Cookie でクッキーを設定した場合、ブラウザは</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: myname=value1; myname=value0</code></pre></div>\n<p>のように同じ名前の Cookie を２つサーバーに送るようになります。</p>\n<h2 id=\"javascript-を使って-cookie-を保存・参照する\" style=\"position:relative;\"><a href=\"#javascript-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-cookie-%E3%82%92%E4%BF%9D%E5%AD%98%E3%83%BB%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B\" aria-label=\"javascript を使って cookie を保存・参照する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript を使って Cookie を保存・参照する</h2>\n<p><code>document.cookie</code> というプロパティを利用して JavaScript からクッキーを設定したり参照することができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> <span class=\"token string\">\"name=value\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>のように<code>document.cookie</code>に対して文字列を代入すると、<code>Set-Cookkie: name=value</code>ヘッダをサーバーからブラウザに送信した場合と同じことが起こります。Set-Cookie ヘッダとどうように、属性を付けることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> <span class=\"token string\">\"name=value; max-age=3600; Secure\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>復数のクッキーを指定した場合は、Set-Cookie ヘッダと似たような感じに 1 つずつ代入します。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> <span class=\"token string\">\"name0=value0\"</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>cookie <span class=\"token operator\">=</span> <span class=\"token string\">\"name1=value1\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>クッキーの値を参照するには、 <code>document.cookie</code> プロパティを参照します。<code>document.cookie</code> プロパティは参照すると <code>Cookie</code>ヘッダで送信されるのと同じ文字列を得ることができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>cookie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// “name=0=value0; name1=value1”</span></code></pre></div>\n<p><code>document.cookie</code> は一見すると string 型のプロパティのように見えますが、そうではないことに注意して下さい。<code>document.cookie</code> へ代入した文字列と <code>document.cookie</code>を読んだ時に得られる文字列はまったく異なります。また、<code>document.cookie</code>に空文字を代入しても 空の <code>Set-Cookie</code>を送ったのと同じことにしかならないので何も起こりません。クッキーは削除されず、<code>document.cookie</code>を読んだ時に得られる値も変化しません。</p>\n<h2 id=\"cookie-の属性\" style=\"position:relative;\"><a href=\"#cookie-%E3%81%AE%E5%B1%9E%E6%80%A7\" aria-label=\"cookie の属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cookie の属性</h2>\n<h3 id=\"domain-属性\" style=\"position:relative;\"><a href=\"#domain-%E5%B1%9E%E6%80%A7\" aria-label=\"domain 属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>domain 属性</h3>\n<p>Set-Cookie でクッキーをブラウザに保存する際domainという属性を付加することでクッキーが送信される、あるいは<code>document.cookie</code>でクッキーが読み取れる、ドメインを制御することができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: name=value; domain=example.com</code></pre></div>\n<p>domain 属性が指定されている場合、そのクッキーは domain で指定された domain 自体とそのサブドメインに対して送信されます。\n上の例の場合、このクッキーは example.com, www.example.com, docs.example.com などのホストに対して送信されます。\n一方で domain を指定しない場合は、Set-Cookie を送信したホストにのみクッキーは送信されます。\ndomain属性なしで、example.com によって設定されたクッキーは www.example.com や docs.example.com には送信されません。\ndomainを省略した場合と、domain に今接続しているホスト名を指定した場合ではクッキーが送信される範囲が異なる点に注意が必要です。\nサブドメインに送信されてはならないクッキーには domain 属性はつけてはなりません。</p>\n<p>また domain 属性で指定するドメインは現在のホスト名を含むドメインでなくてはなりません。\nそうでない値を指定した場合は無視されます。例えばあるページが\nwww.example.com にある場合、domain に example.com を指定してクッキーが\nexample.com 以下のあらゆるホストに対して送信されるように設定できますが、\ndomain に google.com を指定して google.com\nに対してクッキーを送信するように設定することはできません。また、domain 属性に\nabc.www.example.com を指定してサブドメイン abc.www.example.com\nにのみクッキーが送信されるようにすることもできません。</p>\n<p>domain 属性の値の先頭に “.” を付けても構いません。その “.”\nは無視されます。 また念の為述べておくと domain に www.example あるいは\nwww.example. などと指定しても www.example.co.jp と example.com\nにクッキーを送信されたりはしません。</p>\n<h3 id=\"path-属性\" style=\"position:relative;\"><a href=\"#path-%E5%B1%9E%E6%80%A7\" aria-label=\"path 属性 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>path 属性</h3>\n<p>クッキーには path 属性を指定することができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: name=value; path=/mydir</code></pre></div>\n<p>のように path 属性を指定するとクッキーは /mydir/ に含まれる URL (e.g.\n<a href=\"http://example.com/mydir/\">http://example.com/mydir/</a>, <a href=\"http://example.com/mydir/index.html\">http://example.com/mydir/index.html</a>,\n<a href=\"http://example.com/mydir/subdir/\">http://example.com/mydir/subdir/</a>) にのみ送信されます。path\nが省略された場合は現在の URL の path が使われます。例えば現在のページが\n<a href=\"http://example.com/mydir/subdir/index.html\">http://example.com/mydir/subdir/index.html</a> であれば /mydir/subdir/ が\npath\nに設定されます。ほとんどの場合、同一ドメインの全てのリクエストでクッキーが送信されるようにしたいと思うので、多くの場合\npath=/ を常に指定することになります。path=/\nを指定するのをうっかり忘れると、<a href=\"http://example.com/2014/11/\">http://example.com/2014/11/</a>\nで指定されたクッキーが <a href=\"http://example.com/2013/12/\">http://example.com/2013/12/</a>\nには送信されません。</p>\n<p>さて、path も domain\nと同じようにクッキーが送信される範囲を制御するので、セキュリティ上重要なように一見すると思えますが、実は\npath はセキュリティ保護には利用できません。<a href=\"http://www.ipa.go.jp/security/awareness/vendor/programmingv2/contents/304.html\">IPA の第 4 章\nセッション対策</a>\nには path をなるべく限定しておいたほうがよいような記述がありますが、path\nを限定してもその他の path\nにあるリソースからクッキーを読む方法は存在するので気をつけて下さい。セッション ID などを保存するのであれば、普通は\n<code>path=/</code> を指定すると思います。</p>\n<h3 id=\"max-age-と-expire\" style=\"position:relative;\"><a href=\"#max-age-%E3%81%A8-expire\" aria-label=\"max age と expire permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>max-age と expire</h3>\n<p>max-age あるいは expire 属性でクッキーの寿命が指定できます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Set-Cookie: name=value; max-age=3600\nSet-Cookie: name=value; expires=Tue, 19 Jan 2038 03:14:07 GMT</code></pre></div>\n<ul>\n<li><code>max-age</code>\nではクッキーの寿命を秒数で指定します。負の値を指定すると、最も過去の日付を指定したことになります。</li>\n<li><code>expires</code> では有効期限が切れる日付・時刻を指定します。</li>\n<li><code>max-age</code> と <code>expires</code> の両方が指定された場合は <code>max-age</code>\nが使用されます。</li>\n<li><code>max-age</code> はかなり古いブラウザではサポートされない場合があります。</li>\n<li><code>max-age</code>, <code>expires</code>\nがなく寿命が指定されていない場合は、クッキーはブラウザが閉じられると削除されます。</li>\n</ul>\n<h3 id=\"secure\" style=\"position:relative;\"><a href=\"#secure\" aria-label=\"secure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>secure</h3>\n<p>うっかり忘れられがちですが、セキュリティ上とても大切な仕様です。 Secure 属性をつけた場合、そのクッキーは接続が https で保護されている場合のみに送信されます。Secure 属性には値は必要ありません。</p>\n<p>デフォルトではクッキーは接続が <code>https</code> なのか <code>http</code>\nなのかには関係なく動作します。 https 接続で設定されたクッキーであっても\nSecure 属性がなければ同じホスト名に http\nで接続した場合にもそのクッキーは送信されてしまい、通信経路上にいる第三者に盗聴される可能性があります。\nセッション ID のような第三者に盗み見られてはならないクッキーは必ず Secure\n属性をつけなくてはなりません。 絶対に忘れないようにしましょう。</p>\n<h3 id=\"httponly\" style=\"position:relative;\"><a href=\"#httponly\" aria-label=\"httponly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>httponly</h3>\n<p>httponly 属性をつけると、そのクッキーは <code>Cookie</code>ヘッダ以外から読み取ることができなくなりなり、JavaScript から参照できなくなります。\nSecure の反対の意味、 http でしか送信されない Cookie という意味では <strong>ない</strong> ので気をつけて下さい。</p>\n<p>このオプションは XSS 脆弱性があった場合の被害を小さくします。\nXSS 脆弱性によって攻撃者が任意の JavaScript が実行できてしまうと、\n<code>document.cookie</code> の値を読んで Session ID\nなどのログイン情報などを盗み見れてしまう可能性がありますが、\nHttpOnly 属性をつけておくとクッキーが XSS\n脆弱性によって読み取られることがなくなります。 Session ID などのように\nJavaScript から読み取る必要がないクッキーには HttpOnly\nを忘れずに付けておいたほうが良いでしょう。</p>\n<h2 id=\"その他\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%81%AE%E4%BB%96\" aria-label=\"その他 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>その他</h2>\n<h3 id=\"クッキーと-port-番号\" style=\"position:relative;\"><a href=\"#%E3%82%AF%E3%83%83%E3%82%AD%E3%83%BC%E3%81%A8-port-%E7%95%AA%E5%8F%B7\" aria-label=\"クッキーと port 番号 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>クッキーと port 番号</h3>\n<h2 id=\"cookie-が絡むセキュリティ関係の問題\" style=\"position:relative;\"><a href=\"#cookie-%E3%81%8C%E7%B5%A1%E3%82%80%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E9%96%A2%E4%BF%82%E3%81%AE%E5%95%8F%E9%A1%8C\" aria-label=\"cookie が絡むセキュリティ関係の問題 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cookie が絡むセキュリティ関係の問題</h2>\n<h3 id=\"通信路上でのクッキーの漏洩\" style=\"position:relative;\"><a href=\"#%E9%80%9A%E4%BF%A1%E8%B7%AF%E4%B8%8A%E3%81%A7%E3%81%AE%E3%82%AF%E3%83%83%E3%82%AD%E3%83%BC%E3%81%AE%E6%BC%8F%E6%B4%A9\" aria-label=\"通信路上でのクッキーの漏洩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>通信路上でのクッキーの漏洩</h3>\n<p>クッキーにセッション ID のような機密情報が含まれる場合、当然ですがクッキーは<code>https</code>を介して行われなければなりません。</p>\n<h3 id=\"クロスサイトスクリプティング-cross-site-scripting-xss\" style=\"position:relative;\"><a href=\"#%E3%82%AF%E3%83%AD%E3%82%B9%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0-cross-site-scripting-xss\" aria-label=\"クロスサイトスクリプティング cross site scripting xss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>クロスサイトスクリプティング (Cross Site Scripting, XSS)</h3>\n<p>Web アプリケーションでもっともよく問題になる<a href=\"https://www.google.co.jp/search?q=xss&#x26;hl=ja\">クロスサイトスクリプティング</a>は端的に言えば、\nユーザの入力を HTML に変換する際のバグにより悪意のある JavaScript が実行されてしまう問題です。クッキーの処理自体が XSS 脆弱性を引き起こす原因になることはあまりないでしょう。</p>\n<p>しかしクッキーの設定によって XSS の脆弱性があった場合の被害を緩和することは可能です。</p>","tableOfContents":"<ul>\n<li><a href=\"/docs/cookie_and_security.html/#set-cookie-%E3%83%98%E3%83%83%E3%83%80%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-cookie-%E3%82%92%E4%BF%9D%E5%AD%98%E3%81%99%E3%82%8B\">Set-Cookie ヘッダを使って Cookie を保存する</a></li>\n<li><a href=\"/docs/cookie_and_security.html/#cookie-%E3%82%92%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B\">Cookie を参照する</a></li>\n<li><a href=\"/docs/cookie_and_security.html/#javascript-%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6-cookie-%E3%82%92%E4%BF%9D%E5%AD%98%E3%83%BB%E5%8F%82%E7%85%A7%E3%81%99%E3%82%8B\">JavaScript を使って Cookie を保存・参照する</a></li>\n<li>\n<p><a href=\"/docs/cookie_and_security.html/#cookie-%E3%81%AE%E5%B1%9E%E6%80%A7\">Cookie の属性</a></p>\n<ul>\n<li><a href=\"/docs/cookie_and_security.html/#domain-%E5%B1%9E%E6%80%A7\">domain 属性</a></li>\n<li><a href=\"/docs/cookie_and_security.html/#path-%E5%B1%9E%E6%80%A7\">path 属性</a></li>\n<li><a href=\"/docs/cookie_and_security.html/#max-age-%E3%81%A8-expire\">max-age と expire</a></li>\n<li><a href=\"/docs/cookie_and_security.html/#secure\">secure</a></li>\n<li><a href=\"/docs/cookie_and_security.html/#httponly\">httponly</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/cookie_and_security.html/#%E3%81%9D%E3%81%AE%E4%BB%96\">その他</a></p>\n<ul>\n<li><a href=\"/docs/cookie_and_security.html/#%E3%82%AF%E3%83%83%E3%82%AD%E3%83%BC%E3%81%A8-port-%E7%95%AA%E5%8F%B7\">クッキーと port 番号</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/cookie_and_security.html/#cookie-%E3%81%8C%E7%B5%A1%E3%82%80%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3%E9%96%A2%E4%BF%82%E3%81%AE%E5%95%8F%E9%A1%8C\">Cookie が絡むセキュリティ関係の問題</a></p>\n<ul>\n<li><a href=\"/docs/cookie_and_security.html/#%E9%80%9A%E4%BF%A1%E8%B7%AF%E4%B8%8A%E3%81%A7%E3%81%AE%E3%82%AF%E3%83%83%E3%82%AD%E3%83%BC%E3%81%AE%E6%BC%8F%E6%B4%A9\">通信路上でのクッキーの漏洩</a></li>\n<li><a href=\"/docs/cookie_and_security.html/#%E3%82%AF%E3%83%AD%E3%82%B9%E3%82%B5%E3%82%A4%E3%83%88%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0-cross-site-scripting-xss\">クロスサイトスクリプティング (Cross Site Scripting, XSS)</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Cookie の仕様とセキュリティ","lastmod":"2016-03-16T00:00:00.000Z","enable_toc":true},"fields":{"slug":"/docs/cookie_and_security.html"}},"site":{"siteMetadata":{"title":"yunabe.jp"}}},"pageContext":{"slug":"/docs/cookie_and_security.html"}}}
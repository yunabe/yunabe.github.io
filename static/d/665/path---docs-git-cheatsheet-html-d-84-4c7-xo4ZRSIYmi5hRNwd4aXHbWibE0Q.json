{"data":{"markdownRemark":{"html":"<h2 id=\"gitレポジトリの作成と複製\"><a href=\"#git%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E8%A4%87%E8%A3%BD\" aria-label=\"gitレポジトリの作成と複製 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gitレポジトリの作成と複製</h2>\n<p>現在のレポジトリでGitの利用を開始するには<a href=\"https://git-scm.com/docs/git-init\"><code>git init</code></a>を実行します</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> init\nInitialized empty Git repository <span class=\"token keyword\">in</span> /home/yunabe/src/myrepository/.git/</code></pre></div>\n<p>既存のレポジトリを手元に複製（クローン）するには<a href=\"https://git-scm.com/docs/git-clone\"><code>git clone</code></a>を実行します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> clone <span class=\"token operator\">&lt;</span>repository<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>directory<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><code>&#x3C;repository></code>は多くの場合GitHubなどのリモートサーバー上のレポジトリを指しますが、ローカルディスク上のレポジトリを指定することも可能です。複製先のディレクトリ名<code>&#x3C;direcotyr></code>は省略可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> clone https://github.com/yunabe/codelab mylab\nCloning into <span class=\"token string\">'mylab'</span><span class=\"token punctuation\">..</span>.\nremote: Enumerating objects: 34, done.\nremote: Counting objects: 100% <span class=\"token punctuation\">(</span>34/34<span class=\"token punctuation\">)</span>, done.\nremote: Compressing objects: 100% <span class=\"token punctuation\">(</span>25/25<span class=\"token punctuation\">)</span>, done.\nremote: Total 2624 <span class=\"token punctuation\">(</span>delta 6<span class=\"token punctuation\">)</span>, reused 32 <span class=\"token punctuation\">(</span>delta 5<span class=\"token punctuation\">)</span>, pack-reused 2590\nReceiving objects: 100% <span class=\"token punctuation\">(</span>2624/2624<span class=\"token punctuation\">)</span>, 1.71 MiB <span class=\"token operator\">|</span> 1.39 MiB/s, done.\nResolving deltas: 100% <span class=\"token punctuation\">(</span>1069/1069<span class=\"token punctuation\">)</span>, done.</code></pre></div>\n<p><code>init</code>, <code>clone</code> ともに <code>--bare</code> というオプションを持っており、<code>--bare</code>を指定した場合には<code>git push</code>が行える<a href=\"/docs/relearning_git_remote.html#bare-repository\">裸のレポジトリ(bare repository)</a>が作成されます。</p>\n<h2 id=\"ワーキングツリーとインデックスの操作\"><a href=\"#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%81%A8%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AE%E6%93%8D%E4%BD%9C\" aria-label=\"ワーキングツリーとインデックスの操作 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ワーキングツリーとインデックスの操作</h2>\n<p>Gitではファイルは、<a href=\"https://git-scm.com/book/ja/v1/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E5%9F%BA%E6%9C%AC#%E4%B8%89%E3%81%A4%E3%81%AE%E7%8A%B6%E6%85%8B\">ローカルで編集済み→ステージ済み→コミット済みという手順を経て</a>レポジトリに記録されます。まずはじめにコミットするまえにローカルでファイルを編集したり、それをインデックスにステージするためのコマンド類をまとめます。</p>\n<h3 id=\"git-add-ワーキングツリーのファイルをインデックスに反映する（ステージング）\"><a href=\"#git-add-%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AB%E5%8F%8D%E6%98%A0%E3%81%99%E3%82%8B%EF%BC%88%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%EF%BC%89\" aria-label=\"git add ワーキングツリーのファイルをインデックスに反映する（ステージング） permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git add</code>: ワーキングツリーのファイルをインデックスに反映する（ステージング）</h3>\n<p>Gitではコミットする前に、変更を「インデックス」に対してアップロードする必要があります。ワーキングツリー（作業ツリー)上の現在のファイルの状態をインデックスに反映する（ステージする）には<a href=\"https://git-scm.com/docs/git-add\"><code>git add</code></a>を使います。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">add</span>　<span class=\"token operator\">&lt;</span>path<span class=\"token operator\">></span></code></pre></div>\n<p><code>add</code>という名前のコマンドですが、ワーキングツリー上のファイルの状態をインデックスに反映するコマンドなので、削除されたファイルを<code>git add</code>するとインデックスからもファイルが削除されます。「ファイルが削除された状態」をインデックスに<code>add</code>するのです。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">rm</span> hello.txt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> status\nOn branch master\n<span class=\"gatsby-highlight-code-line\">Changes not staged <span class=\"token keyword\">for</span> commit:</span>  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add/rm &lt;file>...\"</span> to update what will be committed<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git checkout -- &lt;file>...\"</span> to discard changes <span class=\"token keyword\">in</span> working directory<span class=\"token punctuation\">)</span>\n\n        deleted:    hello.txt\n\n$ <span class=\"token function\">git</span> <span class=\"token function\">add</span> hello.txt <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> status\nOn branch master\n<span class=\"gatsby-highlight-code-line\">Changes to be committed:</span>  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git reset HEAD &lt;file>...\"</span> to unstage<span class=\"token punctuation\">)</span>\n\n        deleted:    hello.txt</code></pre></div>\n<p><code>&#x3C;path></code>にディレクトリを指定するとディレクトリ内のすべてのファイルが<code>git add</code>されます。<code>git add</code>以外のコマンドもディレクトリを指定するとそのディレクトリ内のすべてのファイルを指定したことになることが多いです。現在のディレクトリ内のすべてのファイルの追加、削除、変更操を<code>git add</code>するには<code>git add .</code>を実行します。</p>\n<p><code>.</code>の代わりに<code>--all</code>あるいは<code>-A</code>を渡すとレポジトリ内のすべてのファイルが<code>git add</code>されます （レポジトリのルートで<code>git add .</code>したのと同等の結果）。<a href=\"https://stackoverflow.com/a/26039014/4388164\">Git1.xの名残</a>で<code>git add --all</code>をみかけることのほうが多いかもしれませんが、Git2.x系列においてわざわざ<code>--all</code>を覚えておく必要はあまりないように思います。</p>\n<h3 id=\"git-reset-ステージングをキャンセルする\"><a href=\"#git-reset-%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%82%92%E3%82%AD%E3%83%A3%E3%83%B3%E3%82%BB%E3%83%AB%E3%81%99%E3%82%8B\" aria-label=\"git reset ステージングをキャンセルする permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git reset</code>: ステージングをキャンセルする</h3>\n<p><code>git add</code>で行ったインデックスへのステージングを取り消すには<a href=\"https://git-scm.com/docs/git-reset\"><code>git reset</code></a>を使います。<code>--</code>は<code>&#x3C;path></code>がワーキングツリーに存在する場合は省略可能です。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git reset [--] &lt;path&gt;</code></pre></div>\n<p>先程、<code>git add</code>でインデックスから削除したhello.txtを復元してみましょう。このケースでは<code>hello.txt</code>がローカルに存在しないので<code>--</code>は省略できません。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> reset -- hello.txt\nUnstaged changes after reset:\nD       hello.txt\n$ <span class=\"token function\">git</span> status\nOn branch master\n<span class=\"gatsby-highlight-code-line\">Changes not staged <span class=\"token keyword\">for</span> commit:</span>  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add/rm &lt;file>...\"</span> to update what will be committed<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git checkout -- &lt;file>...\"</span> to discard changes <span class=\"token keyword\">in</span> working directory<span class=\"token punctuation\">)</span>\n\n        deleted:    hello.txt\n\nno changes added to commit <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> and/or <span class=\"token string\">\"git commit -a\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>インデックスに登録されていた<code>hello.txt</code>の削除がキャンセルされているのが<code>git status</code>で確認できます。</p>\n<p><code>git rese</code>も<code>&#x3C;path></code>にディレクトリを指定した場合にはディレクトリ内のすべてのファイルが<code>git reset</code>されます。それと、後述するように<code>git reset</code>には<code>HEAD</code>を移動するという全く別の機能も割り当てられているので、やはり混乱しないように違いに気をつけてください。</p>\n<h3 id=\"git-checkout-ファイルを復元する\"><a href=\"#git-checkout-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%BE%A9%E5%85%83%E3%81%99%E3%82%8B\" aria-label=\"git checkout ファイルを復元する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git checkout</code>: ファイルを復元する</h3>\n<p>ファイルを編集前の状態に戻すには<a href=\"https://git-scm.com/docs/git-checkout\"><code>git checkout</code></a>を使用します。まずインデックス上のファイルの状態を復元するには</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> checkout <span class=\"token punctuation\">[</span>--<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>path<span class=\"token operator\">></span></code></pre></div>\n<p>を実行します。対象のファイルが特にインデックス上で編集されていなければ、そのファイルのインデックス上の状態は<code>HEAD</code>と同じなので直前のコミットからファイルが復元されます。</p>\n<p>コミットされたファイルの状態を復元するときには、<code>git checkout</code>をコミットとともに実行します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> checkout <span class=\"token operator\">&lt;</span>commit<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>--<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>path<span class=\"token operator\">></span></code></pre></div>\n<p>一番良く使うのは <code>git checkout HEAD &#x3C;path></code>でしょう。このコマンドコミットを実行するとファイルの状態がワーキングツリーに復元されるだけでなく、インデックスにも復元されます。つまり、インデックスされている変更ももとに戻されてしますので注意してください。インデックスは変更せずにローカルにだけファイルを復元する方法は<a href=\"https://stackoverflow.com/questions/50158417/\">なぜか用意されていません</a>。ちなみにインデックスにだけファイルを復元したい場合、言い換えればステージングをなかったことにしたい場合には前述したように<code>git reset</code>を使用してください。</p>\n<p>また<code>git checkout</code>コマンドはファイル名を省略することで、全く異なる処理(<code>git checkout master</code>など)に利用されるので混乱しないよう違いをしっかりと覚えてください。</p>\n<h3 id=\"git-rm-ファイルを削除する\"><a href=\"#git-rm-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B\" aria-label=\"git rm ファイルを削除する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git rm</code>: ファイルを削除する</h3>\n<p>Gitにはファイルをワーキングツリーから削除し、それをインデックスに反映する<a href=\"https://git-scm.com/docs/git-rm\"><code>git rm</code></a>コマンドが用意されています。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token operator\">&lt;</span>path<span class=\"token operator\">></span></code></pre></div>\n<p>これは<code>rm &#x3C;path></code>でワーキングツリーからファイルを削除してそれを<code>git add &#x3C;path></code>でインデックスに反映した場合と同じ結果が得られます（<code>git rm</code>は対象のファイルが編集されていない場合にしか利用できないなど細かい点は少し異なる）。</p>\n<p>ワーキングツリーからはファイルを削除せずに、インデックスからのみ削除したい場合には<code>--cached</code>フラグを渡します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">rm</span> --cached <span class=\"token operator\">&lt;</span>path<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"git-mv-ファイルを移動する\"><a href=\"#git-mv-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%A7%BB%E5%8B%95%E3%81%99%E3%82%8B\" aria-label=\"git mv ファイルを移動する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git mv</code>: ファイルを移動する</h3>\n<p>Gitにはファイルを移動し、その移動をインデックスに反映する<a href=\"https://git-scm.com/docs/git-mv\"><code>git mv</code></a>コマンドが用意されています。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">mv</span> <span class=\"token operator\">&lt;</span>src<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>dst<span class=\"token operator\">></span></code></pre></div>\n<p>他のバージョン管理システムのユーザーには信じられないと思いますが、Gitはファイルの移動履歴をトラッキングしません（<em><a href=\"https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_git_mv\">If you rename a file in Git, no metadata is stored in Git that tells it you renamed the file.</a></em>）。そのため、<code>mv &#x3C;src> &#x3C;dst></code>でワーキングツリー上のファイルを移動してから、<code>git add &#x3C;src> &#x3C;dst></code>で移動元、移動先のファイルの状態をインデックスに反映しても<code>git mv</code>したのと場合と全く同じ結果が得られます。</p>\n<p>ちなみにファイルのコピーを行う<code>git cp</code>というコマンドは存在しません。なんででしょうね。</p>\n<h3 id=\"git-clean-トラックされていないファイルの削除\"><a href=\"#git-clean-%E3%83%88%E3%83%A9%E3%83%83%E3%82%AF%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%89%8A%E9%99%A4\" aria-label=\"git clean トラックされていないファイルの削除 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git clean</code>: トラックされていないファイルの削除</h3>\n<p>手元でいろいろな作業を繰り返してできてしまったワーキングツリー上の一時的なファイルは<a href=\"https://git-scm.com/docs/git-clean\"><code>git clean</code></a>で一括削除できます。もちろん<code>.gitignore</code>で指定されているファイルは削除されません。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> clean -f</code></pre></div>\n<p><code>git clean</code>で削除したファイルは復元できないからなのか、<code>git clean</code>は<code>-f</code>で削除を矯正するか<code>-i</code>でインタラクティブモードで動かさないと機能しません。でも<code>git checkout .</code>などの他の不可逆的なコマンドは<code>-f</code>なしで動くのですが。</p>\n<h2 id=\"git-commit-変更をコミットとして記録する\"><a href=\"#git-commit-%E5%A4%89%E6%9B%B4%E3%82%92%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E3%81%97%E3%81%A6%E8%A8%98%E9%8C%B2%E3%81%99%E3%82%8B\" aria-label=\"git commit 変更をコミットとして記録する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git commit</code>: 変更をコミットとして記録する</h2>\n<p>上記のコマンドでインデックスが、コミットとして記録したい状態になったら<a href=\"https://git-scm.com/docs/git-commit\"><code>git commit</code></a>で変更をコミットとして記録します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> commit</code></pre></div>\n<p>エディターが起動しするのでコミットメッセージを書いてエディタを閉じるとコミットが作成されます。<code>-m &#x3C;message></code>を渡すとコミットメッセージをコマンドラインから指定することも可能です。</p>\n<h3 id=\"git-commit---amend-直前のコミットを修正する\"><a href=\"#git-commit---amend-%E7%9B%B4%E5%89%8D%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E4%BF%AE%E6%AD%A3%E3%81%99%E3%82%8B\" aria-label=\"git commit   amend 直前のコミットを修正する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git commit --amend</code>: 直前のコミットを修正する</h3>\n<p><code>git commit</code>した直後に、間違いがあることに気がついて<code>git commit</code>をやり直したいことがよくあります。そんなときには<code>git commit --amend</code>を使います。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> commit --amend</code></pre></div>\n<p>間違えのあったファイルを修正し、<code>git add</code>で修正をステージングし、<code>git commit --amend</code>を実行することで直前のコミットが破棄され、新しい修正済みのコミットが作成されます。</p>\n<h3 id=\"レポジトリ全体を元の状態に戻す\"><a href=\"#%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E5%85%A8%E4%BD%93%E3%82%92%E5%85%83%E3%81%AE%E7%8A%B6%E6%85%8B%E3%81%AB%E6%88%BB%E3%81%99\" aria-label=\"レポジトリ全体を元の状態に戻す permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>レポジトリ全体を元の状態に戻す</h3>\n<p>レポジトリ全体を編集前の元の状態(<code>HEAD</code>)に戻すにはレポジトリのルートディレクトリで以下のコマンドを実行します:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> checkout HEAD <span class=\"token keyword\">.</span>\n<span class=\"token function\">git</span> clean -f</code></pre></div>\n<p>前述したようにまず<code>git checkout HEAD .</code>でワーキングツリーとインデックスを<code>HEAD</code>の状態に戻します。<code>.</code>を指定することでディレクトリ内のすべてのファイルがもとに戻されます。\n<code>git checkout</code>はトラックされていないファイルに関しては何もしないので、必要であれば<code>git clean</code>で不要なファイルも削除します。</p>\n<p>ちなみに最初の<code>git checkout</code>は<code>git reset --hard HEAD</code>でも代用できます。</p>\n<h2 id=\"git-log-履歴の表示\"><a href=\"#git-log-%E5%B1%A5%E6%AD%B4%E3%81%AE%E8%A1%A8%E7%A4%BA\" aria-label=\"git log 履歴の表示 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git log</code>: 履歴の表示</h2>\n<h2 id=\"git-diff-差分の表示\"><a href=\"#git-diff-%E5%B7%AE%E5%88%86%E3%81%AE%E8%A1%A8%E7%A4%BA\" aria-label=\"git diff 差分の表示 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git diff</code>: 差分の表示</h2>\n<p>git で差分を表示するには<a href=\"https://git-scm.com/docs/git-diff\"><code>git diff</code></a>を使います。ワーキングツリー(作業ツリー), インデックス, コミットなど差分を表示したい対象によってオプションを使い分けます。</p>\n<h3 id=\"ワーキングツリーのdiff\"><a href=\"#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%81%AEdiff\" aria-label=\"ワーキングツリーのdiff permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ワーキングツリーのdiff</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">diff</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>commit<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>ワーキングツリーをインデックスや他のコミットと比較するときには上記のフォーマットを使います。<code>&#x3C;commit></code>が省略されるとワーキングツリーとインデックスの比較になり、<code>&#x3C;commit></code>が指定されているとワーキングツリーと指定したコミットとの差分が表示されます。</p>\n<h4 id=\"ワーキングツリーをインデックスと比較する\"><a href=\"#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%82%92%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%A8%E6%AF%94%E8%BC%83%E3%81%99%E3%82%8B\" aria-label=\"ワーキングツリーをインデックスと比較する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ワーキングツリーをインデックスと比較する</h4>\n<p>現在のディレクトリの状態をインデックスと比較するには単に<code>git diff</code>を実行します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">diff</span></code></pre></div>\n<h4 id=\"ワーキングツリーをhead先頭のコミットと比較する\"><a href=\"#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%82%92head%E5%85%88%E9%A0%AD%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E6%AF%94%E8%BC%83%E3%81%99%E3%82%8B\" aria-label=\"ワーキングツリーをhead先頭のコミットと比較する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ワーキングツリーをHEAD(先頭のコミット)と比較する</h4>\n<p>現在のディレクトリの状態を先頭のコミットと比較するには<code>git diff HEAD</code>を実行します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD</code></pre></div>\n<h3 id=\"インデックスのdiff\"><a href=\"#%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AEdiff\" aria-label=\"インデックスのdiff permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>インデックスのdiff</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">diff</span> --cached <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>commit<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>インデックス（ステージされた変更）を他のコミットと比較するときには上記のフォーマットを使います。<code>&#x3C;commit></code>が省略されるとインデックスと<code>HEAD</code>の比較となります。<code>--cached</code>は<code>--staged</code>でも代用できます。</p>\n<h3 id=\"２つのコミットを比較する\"><a href=\"#%EF%BC%92%E3%81%A4%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E6%AF%94%E8%BC%83%E3%81%99%E3%82%8B\" aria-label=\"２つのコミットを比較する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>２つのコミットを比較する</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">diff</span> <span class=\"token operator\">&lt;</span>commit<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>commit<span class=\"token operator\">></span></code></pre></div>\n<p><code>git</code>で２つのコミットの差分を表示するには<code>git diff &#x3C;commit> &#x3C;commit></code>のフォーマットを使います。１つ目のコミットが差分のベースとなります。また<code>&#x3C;commit> &#x3C;commit></code>の部分は<code>&#x3C;commit>..&#x3C;commit></code>とも書けます。この形式の場合は片側の<code>&#x3C;commit></code>を省略可能です。省略された<code>&#x3C;commit></code>は<code>HEAD</code>として扱われます。</p>\n<h4 id=\"headを一つ前のコミットと比較\"><a href=\"#head%E3%82%92%E4%B8%80%E3%81%A4%E5%89%8D%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E6%AF%94%E8%BC%83\" aria-label=\"headを一つ前のコミットと比較 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HEADを一つ前のコミットと比較</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD^ HEAD\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> HEAD^<span class=\"token punctuation\">..</span></code></pre></div>\n<h3 id=\"ブランチとリモートトラッキングブランチの比較\"><a href=\"#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%A8%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%88%E3%83%A9%E3%83%83%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E6%AF%94%E8%BC%83\" aria-label=\"ブランチとリモートトラッキングブランチの比較 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ブランチと<a href=\"relearning_git_remote.html\">リモートトラッキングブランチ</a>の比較</h3>\n<p>リモートレポジトリ上のブランチを<code>git pull</code>する前に差分を確認するには以下のようにします。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> remote origin <span class=\"token comment\"># originの最新版を取得</span>\n<span class=\"token function\">git</span> <span class=\"token function\">diff</span> master origin/master <span class=\"token comment\"># origin上のmasterとローカルのmasterの比較</span></code></pre></div>\n<h2 id=\"git-merge-コミットのマージ\"><a href=\"#git-merge-%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%AE%E3%83%9E%E3%83%BC%E3%82%B8\" aria-label=\"git merge コミットのマージ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git merge</code>: コミットのマージ</h2>\n<p>Gitを代表とするDVCSではコミットは簡単に分岐していくので、それをマージする処理が非常に頻繁に行われます。Gitで２つ以上のコミットをマージするには<a href=\"https://git-scm.com/docs/git-merge\"><code>git merge</code></a>を使います。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> merge <span class=\"token operator\">&lt;</span>commit<span class=\"token operator\">></span></code></pre></div>\n<p><code>git merge &#x3C;commit></code>を実行すると現在のブランチに<code>&#x3C;commit></code>が指すコミットがマージされます。例えば下のようなコミット履歴があり、現在のブランチが<code>master</code>だとしましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\t  A---B---C topic\n\t /\nD---E---F---G master</code></pre></div>\n<p>ここで<code>git merge topic</code>を実行すると、マージコミット<code>H</code>が作成されて最終的に以下のような履歴グラフが作成されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\t  A---B---C topic\n\t /         \\\nD---E---F---G---H master</code></pre></div>\n<p><code>git merge topic</code>はブランチ<code>topic</code>が指しているコミット<code>C</code>を現在のブランチ<code>master</code>にマージするコマンドなので、実行後も<code>topic</code>変わらず<code>C</code>を指し続けます。</p>\n<p>ちなみに<code>git merge</code>は<code>&#x3C;commit></code>を複数与え、３つ以上のコミットを１つのコミットにマージすることも可能です。３つ以上のコミットのマージはあまり使わない気がしますが。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\t  A---B---C topic\n\t /\nD---E---F---G master\n\t \\\n\t  I---J---K dev</code></pre></div>\n<p>この状態でmasterで <code>git merge topic dev</code>すると<code>C</code>, <code>G</code>, <code>K</code>がマージされた<code>H</code>ができます。３つ以上のコミットのマージは<code>octopus</code>（タコ）と呼ばれデフォルトでは衝突が起こらない場合のみ実行することができます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\t  A---B---C topic\n\t /         \\\nD---E---F---G---H master\n\t \\         /\n\t  I---J---K topic</code></pre></div>\n<h2 id=\"git-merge-衝突の解消\"><a href=\"#git-merge-%E8%A1%9D%E7%AA%81%E3%81%AE%E8%A7%A3%E6%B6%88\" aria-label=\"git merge 衝突の解消 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code>git merge</code>: 衝突の解消</h2>\n<p><code>git merge</code>でマージしようとしている２つのコミットが共通するファイルの同じ部分を編集していると、衝突（conflict）が発生します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> merge topic\nAuto-merging members.txt\n<span class=\"gatsby-highlight-code-line\">CONFLICT <span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span>: Merge conflict <span class=\"token keyword\">in</span> members.txt</span>Automatic merge failed<span class=\"token punctuation\">;</span> fix conflicts and <span class=\"token keyword\">then</span> commit the result.</code></pre></div>\n<h3 id=\"マージの状態を確認する\"><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%AE%E7%8A%B6%E6%85%8B%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\" aria-label=\"マージの状態を確認する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>マージの状態を確認する</h3>\n<p>どのファイルで衝突が発生したのかは<code>git status</code>で確認します。<code>Unmerged paths:</code>の部分にマージに失敗しているファイルが列挙されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> status\nOn branch master\nYou have unmerged paths.\n  <span class=\"token punctuation\">(</span>fix conflicts and run <span class=\"token string\">\"git commit\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git merge --abort\"</span> to abort the merge<span class=\"token punctuation\">)</span>\n\nUnmerged paths:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add &lt;file>...\"</span> to mark resolution<span class=\"token punctuation\">)</span>\n\n        both modified:   hello.txt\n\nno changes added to commit <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add\"</span> and/or <span class=\"token string\">\"git commit -a\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"衝突を解決する\"><a href=\"#%E8%A1%9D%E7%AA%81%E3%82%92%E8%A7%A3%E6%B1%BA%E3%81%99%E3%82%8B\" aria-label=\"衝突を解決する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>衝突を解決する</h3>\n<p><code>git merge</code>に表示された変更が衝突しているファイルを開くと、</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n現在のブランチでの変更\n=======\nマージする対象のブランチでの変更\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code></pre></div>\n<p>のように衝突が表示されるので好きなエディタを使って、衝突部分を修正します。修正が終わったらファイルを<code>git add</code>してステージングします。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> hello.txt</code></pre></div>\n<p>片側のコミットでファイルが削除されている場合には <code>git merge</code>, <code>git status</code> で以下のようなメッセージが表示されます</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ <span class=\"token function\">git</span> merge bob\nCONFLICT <span class=\"token punctuation\">(</span>modify/delete<span class=\"token punctuation\">)</span>: members.txt deleted…\n$ <span class=\"token function\">git</span> status\nUnmerged paths:\n  <span class=\"token punctuation\">(</span>use <span class=\"token string\">\"git add/rm &lt;file>...\"</span> as appropriate to mark resolution<span class=\"token punctuation\">)</span>\n\n        deleted by them: hello.txt</code></pre></div>\n<p>そして片側で編集されたファイルがローカルに存在する状態になるので、ファイルを残すのであれば<code>git add</code>, ファイルを削除するのであれば<code>git rm (--cached)</code>を実行してインデックスに対して明示的にファイルを追加するか削除するかします。</p>\n<p>すべてのファイルの衝突が解決できたら<code>git commit</code>を実行してマージコミットをコミットします。コミットメッセージは自動生成されるので<code>-m</code>などは渡す必要はありません。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> commit</code></pre></div>\n<p>ちなみに<code>Unmerged paths</code>がある状態で<code>git commit</code>を実行しても <em>Committing is not possible because you have unmerged files.</em>という警告が表示され何も行われません。また最後の<code>git commit</code>は<code>git merge --continue</code>でも代用できます。</p>\n<h3 id=\"マージを中止する\"><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E4%B8%AD%E6%AD%A2%E3%81%99%E3%82%8B\" aria-label=\"マージを中止する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>マージを中止する</h3>\n<p>衝突の解消が難しく、一旦<code>git merge</code>処理を中止したい場合には<code>git merge --abort</code>を実行します。<code>--abort</code>すると<code>git merge</code>実行前の状態に戻ります。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git merge --abort</code></pre></div>\n<h3 id=\"マージ中なのかを確認する・どのコミットとマージ中なのかを再確認する\"><a href=\"#%E3%83%9E%E3%83%BC%E3%82%B8%E4%B8%AD%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B%E3%83%BB%E3%81%A9%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E3%83%9E%E3%83%BC%E3%82%B8%E4%B8%AD%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%92%E5%86%8D%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\" aria-label=\"マージ中なのかを確認する・どのコミットとマージ中なのかを再確認する permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>マージ中なのかを確認する・どのコミットとマージ中なのかを再確認する</h3>\n<p>マージの解消は時間が手間のかかる処理なので後回しにしてしまって、後になって現在のレポジトリがマージ作業中だったのか分からなくなることがたまにあります。あるいはどのコミットとマージしている最中だったのかが分からなくなることもあります。</p>\n<p>このような場合には、<code>.git/MERGE_HEAD</code>ファイルをチェックします。マージ中の場合にはファイルが存在し、ファイルの中にマージしようとしているコミットのhexが書かれています。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">cat</span> .git/MERGE_HEAD</code></pre></div>\n<h2 id=\"ブランチの操作\"><a href=\"#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E6%93%8D%E4%BD%9C\" aria-label=\"ブランチの操作 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ブランチの操作</h2>\n<p>Gitではブランチの操作は表示に関わるコマンドは<a href=\"https://git-scm.com/docs/git-branch\"><code>git branch</code></a>に集約されています。</p>\n<h3 id=\"ブランチ一覧表示\"><a href=\"#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E4%B8%80%E8%A6%A7%E8%A1%A8%E7%A4%BA\" aria-label=\"ブランチ一覧表示 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ブランチ一覧表示</h3>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> branch -vv</code></pre></div>\n<p>レポジトリ内に存在するブランチを一覧表示します。現在のブランチの先頭には<code>*</code>が表示されます。</p>\n<p><code>-vv</code>をつけることで、各ブランチがどのコミットを指しているかと、どのリモート上のブランチと紐づけられているか（<a href=\"relearning_git_pull_default.html\">トラッキングブランチ</a>）も合わせて表示されています。<code>-vv</code>を取り除くとブランチ名のみが表示されます。単に今いるブランチの名前を確認したいだけなら、これで十分です。</p>\n<h3 id=\"新しいブランチを作る\"><a href=\"#%E6%96%B0%E3%81%97%E3%81%84%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E4%BD%9C%E3%82%8B\" aria-label=\"新しいブランチを作る permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新しいブランチを作る</h3>\n<p>現在の<code>HEAD</code>を起点として新しいブランチを作成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">git</span> branch <span class=\"token operator\">&lt;</span>branch<span class=\"token operator\">></span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/docs/git_cheatsheet.html/#git%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%A8%E8%A4%87%E8%A3%BD\">Gitレポジトリの作成と複製</a></li>\n<li>\n<p><a href=\"/docs/git_cheatsheet.html/#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%81%A8%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AE%E6%93%8D%E4%BD%9C\">ワーキングツリーとインデックスの操作</a></p>\n<ul>\n<li><a href=\"/docs/git_cheatsheet.html/#git-add-%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AB%E5%8F%8D%E6%98%A0%E3%81%99%E3%82%8B%EF%BC%88%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%EF%BC%89\">git add: ワーキングツリーのファイルをインデックスに反映する（ステージング）</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#git-reset-%E3%82%B9%E3%83%86%E3%83%BC%E3%82%B8%E3%83%B3%E3%82%B0%E3%82%92%E3%82%AD%E3%83%A3%E3%83%B3%E3%82%BB%E3%83%AB%E3%81%99%E3%82%8B\">git reset: ステージングをキャンセルする</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#git-checkout-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%BE%A9%E5%85%83%E3%81%99%E3%82%8B\">git checkout: ファイルを復元する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#git-rm-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%89%8A%E9%99%A4%E3%81%99%E3%82%8B\">git rm: ファイルを削除する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#git-mv-%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%A7%BB%E5%8B%95%E3%81%99%E3%82%8B\">git mv: ファイルを移動する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#git-clean-%E3%83%88%E3%83%A9%E3%83%83%E3%82%AF%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%81%AA%E3%81%84%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%89%8A%E9%99%A4\">git clean: トラックされていないファイルの削除</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/git_cheatsheet.html/#git-commit-%E5%A4%89%E6%9B%B4%E3%82%92%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E3%81%97%E3%81%A6%E8%A8%98%E9%8C%B2%E3%81%99%E3%82%8B\">git commit: 変更をコミットとして記録する</a></p>\n<ul>\n<li><a href=\"/docs/git_cheatsheet.html/#git-commit---amend-%E7%9B%B4%E5%89%8D%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E4%BF%AE%E6%AD%A3%E3%81%99%E3%82%8B\">git commit --amend: 直前のコミットを修正する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%AC%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E5%85%A8%E4%BD%93%E3%82%92%E5%85%83%E3%81%AE%E7%8A%B6%E6%85%8B%E3%81%AB%E6%88%BB%E3%81%99\">レポジトリ全体を元の状態に戻す</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/git_cheatsheet.html/#git-log-%E5%B1%A5%E6%AD%B4%E3%81%AE%E8%A1%A8%E7%A4%BA\">git log: 履歴の表示</a></li>\n<li>\n<p><a href=\"/docs/git_cheatsheet.html/#git-diff-%E5%B7%AE%E5%88%86%E3%81%AE%E8%A1%A8%E7%A4%BA\">git diff: 差分の表示</a></p>\n<ul>\n<li>\n<p><a href=\"/docs/git_cheatsheet.html/#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%81%AEdiff\">ワーキングツリーのdiff</a></p>\n<ul>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%82%92%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%A8%E6%AF%94%E8%BC%83%E3%81%99%E3%82%8B\">ワーキングツリーをインデックスと比較する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%AF%E3%83%BC%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%84%E3%83%AA%E3%83%BC%E3%82%92head%E5%85%88%E9%A0%AD%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E6%AF%94%E8%BC%83%E3%81%99%E3%82%8B\">ワーキングツリーをHEAD(先頭のコミット)と比較する</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%AEdiff\">インデックスのdiff</a></li>\n<li>\n<p><a href=\"/docs/git_cheatsheet.html/#%EF%BC%92%E3%81%A4%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%82%92%E6%AF%94%E8%BC%83%E3%81%99%E3%82%8B\">２つのコミットを比較する</a></p>\n<ul>\n<li><a href=\"/docs/git_cheatsheet.html/#head%E3%82%92%E4%B8%80%E3%81%A4%E5%89%8D%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E6%AF%94%E8%BC%83\">HEADを一つ前のコミットと比較</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%A8%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%88%E3%83%A9%E3%83%83%E3%82%AD%E3%83%B3%E3%82%B0%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E6%AF%94%E8%BC%83\">ブランチとリモートトラッキングブランチの比較</a></li>\n</ul>\n</li>\n<li><a href=\"/docs/git_cheatsheet.html/#git-merge-%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%AE%E3%83%9E%E3%83%BC%E3%82%B8\">git merge: コミットのマージ</a></li>\n<li>\n<p><a href=\"/docs/git_cheatsheet.html/#git-merge-%E8%A1%9D%E7%AA%81%E3%81%AE%E8%A7%A3%E6%B6%88\">git merge: 衝突の解消</a></p>\n<ul>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%AE%E7%8A%B6%E6%85%8B%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">マージの状態を確認する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E8%A1%9D%E7%AA%81%E3%82%92%E8%A7%A3%E6%B1%BA%E3%81%99%E3%82%8B\">衝突を解決する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%9E%E3%83%BC%E3%82%B8%E3%82%92%E4%B8%AD%E6%AD%A2%E3%81%99%E3%82%8B\">マージを中止する</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%9E%E3%83%BC%E3%82%B8%E4%B8%AD%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B%E3%83%BB%E3%81%A9%E3%81%AE%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%81%A8%E3%83%9E%E3%83%BC%E3%82%B8%E4%B8%AD%E3%81%AA%E3%81%AE%E3%81%8B%E3%82%92%E5%86%8D%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">マージ中なのかを確認する・どのコミットとマージ中なのかを再確認する</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/docs/git_cheatsheet.html/#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%81%AE%E6%93%8D%E4%BD%9C\">ブランチの操作</a></p>\n<ul>\n<li><a href=\"/docs/git_cheatsheet.html/#%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E4%B8%80%E8%A6%A7%E8%A1%A8%E7%A4%BA\">ブランチ一覧表示</a></li>\n<li><a href=\"/docs/git_cheatsheet.html/#%E6%96%B0%E3%81%97%E3%81%84%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E3%82%92%E4%BD%9C%E3%82%8B\">新しいブランチを作る</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"シーン別 Git チートシート","lastmod":"2019-06-07T00:00:00.000Z","enable_toc":true},"fields":{"slug":"/docs/git_cheatsheet.html"}},"site":{"siteMetadata":{"title":"yunabe.jp"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/git_cheatsheet.html"}}